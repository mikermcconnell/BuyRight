'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  ShieldCheckIcon,\n  StarIcon,\n  CheckBadgeIcon,\n  UsersIcon,\n  BuildingOfficeIcon,\n  AcademicCapIcon,\n  ClockIcon,\n  GlobeAltIcon,\n  HeartIcon,\n  TrophyIcon,\n  CurrencyDollarIcon,\n  DocumentCheckIcon,\n} from '@heroicons/react/24/outline';\nimport {\n  StarIcon as StarSolid,\n  ShieldCheckIcon as ShieldSolid,\n  HeartIcon as HeartSolid,\n} from '@heroicons/react/24/solid';\n\n// Security Badge Component\ninterface SecurityBadgeProps {\n  certifications: string[];\n  className?: string;\n}\n\nexport function SecurityBadge({ certifications, className = '' }: SecurityBadgeProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (certifications.length > 1) {\n      const interval = setInterval(() => {\n        setCurrentIndex((prev) => (prev + 1) % certifications.length);\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [certifications.length]);\n\n  return (\n    <motion.div\n      className={`\n        inline-flex items-center bg-green-50 border border-green-200 rounded-xl px-4 py-2\n        shadow-sm hover:shadow-md transition-all duration-200\n        ${className}\n      `}\n      whileHover={{ scale: 1.02 }}\n    >\n      <ShieldSolid className=\"w-5 h-5 text-green-600 mr-2\" />\n      <div className=\"text-sm\">\n        <div className=\"font-semibold text-green-800\">Secure & Certified</div>\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={currentIndex}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.3 }}\n            className=\"text-xs text-green-600\"\n          >\n            {certifications[currentIndex]}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n    </motion.div>\n  );\n}\n\n// Trust Score Component\ninterface TrustScoreProps {\n  score: number;\n  maxScore?: number;\n  reviews: number;\n  className?: string;\n}\n\nexport function TrustScore({ score, maxScore = 5, reviews, className = '' }: TrustScoreProps) {\n  const percentage = (score / maxScore) * 100;\n  const fullStars = Math.floor(score);\n  const hasHalfStar = score % 1 !== 0;\n  const emptyStars = maxScore - fullStars - (hasHalfStar ? 1 : 0);\n\n  return (\n    <motion.div\n      className={`inline-flex items-center space-x-3 ${className}`}\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"flex items-center space-x-1\">\n        {[...Array(fullStars)].map((_, i) => (\n          <motion.div\n            key={i}\n            initial={{ opacity: 0, rotate: -180 }}\n            animate={{ opacity: 1, rotate: 0 }}\n            transition={{ duration: 0.3, delay: i * 0.1 }}\n          >\n            <StarSolid className=\"w-5 h-5 text-yellow-400\" />\n          </motion.div>\n        ))}\n        {hasHalfStar && (\n          <div className=\"relative\">\n            <StarIcon className=\"w-5 h-5 text-gray-300\" />\n            <div className=\"absolute inset-0 overflow-hidden w-1/2\">\n              <StarSolid className=\"w-5 h-5 text-yellow-400\" />\n            </div>\n          </div>\n        )}\n        {[...Array(emptyStars)].map((_, i) => (\n          <StarIcon key={i} className=\"w-5 h-5 text-gray-300\" />\n        ))}\n      </div>\n      \n      <div className=\"text-sm\">\n        <span className=\"font-bold text-gray-900\">{score.toFixed(1)}</span>\n        <span className=\"text-gray-600 ml-1\">({reviews.toLocaleString()} reviews)</span>\n      </div>\n      \n      <div className=\"flex items-center space-x-1\">\n        <div className=\"w-16 h-2 bg-gray-200 rounded-full overflow-hidden\">\n          <motion.div\n            className=\"h-full bg-gradient-to-r from-yellow-400 to-yellow-500\"\n            initial={{ width: 0 }}\n            animate={{ width: `${percentage}%` }}\n            transition={{ duration: 1, delay: 0.5 }}\n          />\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n\n// Professional Certifications\ninterface CertificationBadgeProps {\n  certifications: Array<{\n    name: string;\n    issuer: string;\n    icon?: React.ComponentType<any>;\n    verified: boolean;\n  }>;\n  className?: string;\n}\n\nexport function CertificationBadge({ certifications, className = '' }: CertificationBadgeProps) {\n  return (\n    <div className={`space-y-3 ${className}`}>\n      <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n        <AcademicCapIcon className=\"w-5 h-5 mr-2 text-blue-600\" />\n        Professional Certifications\n      </h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n        {certifications.map((cert, index) => {\n          const Icon = cert.icon || CheckBadgeIcon;\n          return (\n            <motion.div\n              key={index}\n              className={`\n                flex items-center p-3 rounded-xl border-2 transition-all duration-200\n                ${cert.verified \n                  ? 'bg-blue-50 border-blue-200 hover:border-blue-300' \n                  : 'bg-gray-50 border-gray-200 hover:border-gray-300'\n                }\n              `}\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.3, delay: index * 0.1 }}\n              whileHover={{ scale: 1.02 }}\n            >\n              <Icon className={`w-6 h-6 mr-3 ${\n                cert.verified ? 'text-blue-600' : 'text-gray-400'\n              }`} />\n              \n              <div className=\"flex-1 min-w-0\">\n                <div className={`font-medium ${\n                  cert.verified ? 'text-blue-900' : 'text-gray-700'\n                }`}>\n                  {cert.name}\n                </div>\n                <div className=\"text-sm text-gray-500 truncate\">\n                  {cert.issuer}\n                </div>\n              </div>\n              \n              {cert.verified && (\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  transition={{ delay: 0.5 + index * 0.1 }}\n                >\n                  <CheckBadgeIcon className=\"w-5 h-5 text-green-500\" />\n                </motion.div>\n              )}\n            </motion.div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\n// Social Proof Counter\ninterface SocialProofProps {\n  stats: Array<{\n    label: string;\n    value: string | number;\n    icon: React.ComponentType<any>;\n    color?: string;\n    description?: string;\n  }>;\n  className?: string;\n}\n\nexport function SocialProof({ stats, className = '' }: SocialProofProps) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setIsVisible(true), 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className={`${className}`}>\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n        {stats.map((stat, index) => {\n          const Icon = stat.icon;\n          return (\n            <motion.div\n              key={index}\n              className=\"text-center\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n              transition={{ duration: 0.6, delay: index * 0.2 }}\n            >\n              <motion.div\n                className={`w-12 h-12 mx-auto mb-3 rounded-xl flex items-center justify-center ${\n                  stat.color || 'bg-primary-100'\n                } shadow-sm`}\n                whileHover={{ scale: 1.1, rotate: 5 }}\n                transition={{ duration: 0.2 }}\n              >\n                <Icon className={`w-6 h-6 ${\n                  stat.color ? 'text-white' : 'text-primary-600'\n                }`} />\n              </motion.div>\n              \n              <motion.div\n                className=\"text-2xl font-bold text-gray-900\"\n                initial={{ opacity: 0 }}\n                animate={isVisible ? { opacity: 1 } : { opacity: 0 }}\n                transition={{ duration: 0.8, delay: 0.5 + index * 0.2 }}\n              >\n                <CountUp\n                  end={typeof stat.value === 'number' ? stat.value : parseInt(stat.value.toString().replace(/\\D/g, ''))}\n                  suffix={typeof stat.value === 'string' ? stat.value.replace(/\\d/g, '') : ''}\n                  duration={2}\n                  delay={0.5 + index * 0.2}\n                />\n              </motion.div>\n              \n              <div className=\"text-sm font-medium text-gray-600\">\n                {stat.label}\n              </div>\n              \n              {stat.description && (\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  {stat.description}\n                </div>\n              )}\n            </motion.div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\n// Count Up Animation Component\ninterface CountUpProps {\n  end: number;\n  start?: number;\n  duration?: number;\n  delay?: number;\n  suffix?: string;\n  prefix?: string;\n}\n\nfunction CountUp({ end, start = 0, duration = 2, delay = 0, suffix = '', prefix = '' }: CountUpProps) {\n  const [count, setCount] = useState(start);\n  const [hasStarted, setHasStarted] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setHasStarted(true);\n    }, delay * 1000);\n\n    return () => clearTimeout(timer);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!hasStarted) return;\n\n    const increment = (end - start) / (duration * 60); // 60 FPS\n    let currentCount = start;\n    \n    const timer = setInterval(() => {\n      currentCount += increment;\n      if (currentCount >= end) {\n        setCount(end);\n        clearInterval(timer);\n      } else {\n        setCount(Math.floor(currentCount));\n      }\n    }, 1000 / 60);\n\n    return () => clearInterval(timer);\n  }, [hasStarted, start, end, duration]);\n\n  const formatNumber = (num: number) => {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(1) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toString();\n  };\n\n  return (\n    <span>\n      {prefix}{formatNumber(count)}{suffix}\n    </span>\n  );\n}\n\n// Testimonial Carousel\ninterface TestimonialCarouselProps {\n  testimonials: Array<{\n    name: string;\n    role: string;\n    company?: string;\n    image?: string;\n    quote: string;\n    rating: number;\n    verified: boolean;\n  }>;\n  className?: string;\n  autoPlay?: boolean;\n  interval?: number;\n}\n\nexport function TestimonialCarousel({\n  testimonials,\n  className = '',\n  autoPlay = true,\n  interval = 5000,\n}: TestimonialCarouselProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (!autoPlay) return;\n    \n    const timer = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % testimonials.length);\n    }, interval);\n\n    return () => clearInterval(timer);\n  }, [autoPlay, interval, testimonials.length]);\n\n  if (!testimonials.length) return null;\n\n  const currentTestimonial = testimonials[currentIndex];\n\n  return (\n    <div className={`relative ${className}`}>\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key={currentIndex}\n          initial={{ opacity: 0, x: 100 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -100 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-white rounded-2xl p-8 shadow-xl border border-gray-100\"\n        >\n          {/* Rating Stars */}\n          <div className=\"flex items-center mb-4\">\n            {[...Array(5)].map((_, i) => (\n              <StarSolid\n                key={i}\n                className={`w-5 h-5 ${\n                  i < currentTestimonial.rating ? 'text-yellow-400' : 'text-gray-300'\n                }`}\n              />\n            ))}\n            {currentTestimonial.verified && (\n              <CheckBadgeIcon className=\"w-5 h-5 text-green-500 ml-2\" />\n            )}\n          </div>\n          \n          {/* Quote */}\n          <blockquote className=\"text-lg text-gray-700 mb-6 leading-relaxed\">\n            \"{currentTestimonial.quote}\"\n          </blockquote>\n          \n          {/* Author Info */}\n          <div className=\"flex items-center\">\n            {currentTestimonial.image && (\n              <img\n                src={currentTestimonial.image}\n                alt={currentTestimonial.name}\n                className=\"w-12 h-12 rounded-full mr-4 object-cover\"\n              />\n            )}\n            <div>\n              <div className=\"font-semibold text-gray-900\">\n                {currentTestimonial.name}\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                {currentTestimonial.role}\n                {currentTestimonial.company && ` at ${currentTestimonial.company}`}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </AnimatePresence>\n      \n      {/* Navigation Dots */}\n      <div className=\"flex justify-center mt-6 space-x-2\">\n        {testimonials.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setCurrentIndex(index)}\n            className={`w-3 h-3 rounded-full transition-all duration-200 ${\n              index === currentIndex\n                ? 'bg-primary-600 scale-125'\n                : 'bg-gray-300 hover:bg-gray-400'\n            }`}\n            aria-label={`Go to testimonial ${index + 1}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Money Back Guarantee Badge\ninterface GuaranteeBadgeProps {\n  guaranteeText: string;\n  period?: string;\n  className?: string;\n}\n\nexport function GuaranteeBadge({ guaranteeText, period = '30 days', className = '' }: GuaranteeBadgeProps) {\n  return (\n    <motion.div\n      className={`\n        inline-flex items-center bg-gradient-to-r from-green-500 to-green-600\n        text-white px-6 py-3 rounded-full shadow-lg\n        ${className}\n      `}\n      initial={{ scale: 0.8, opacity: 0 }}\n      animate={{ scale: 1, opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      whileHover={{ scale: 1.05 }}\n    >\n      <ShieldSolid className=\"w-6 h-6 mr-3\" />\n      <div className=\"text-center\">\n        <div className=\"font-bold text-lg\">{period}</div>\n        <div className=\"text-sm opacity-90\">{guaranteeText}</div>\n      </div>\n    </motion.div>\n  );\n}\n\n// Industry Recognition\ninterface IndustryRecognitionProps {\n  awards: Array<{\n    title: string;\n    issuer: string;\n    year: number;\n    logo?: string;\n    description?: string;\n  }>;\n  className?: string;\n}\n\nexport function IndustryRecognition({ awards, className = '' }: IndustryRecognitionProps) {\n  return (\n    <div className={className}>\n      <div className=\"text-center mb-8\">\n        <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n          Industry Recognition\n        </h3>\n        <p className=\"text-gray-600\">\n          Trusted by industry leaders and recognized for excellence\n        </p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {awards.map((award, index) => (\n          <motion.div\n            key={index}\n            className=\"bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-all duration-200 text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: index * 0.1 }}\n            whileHover={{ y: -5 }}\n          >\n            <div className=\"w-16 h-16 bg-gradient-to-br from-yellow-400 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <TrophyIcon className=\"w-8 h-8 text-white\" />\n            </div>\n            \n            <h4 className=\"font-semibold text-gray-900 mb-2\">\n              {award.title}\n            </h4>\n            \n            <p className=\"text-sm text-gray-600 mb-2\">\n              {award.issuer} • {award.year}\n            </p>\n            \n            {award.description && (\n              <p className=\"text-xs text-gray-500\">\n                {award.description}\n              </p>\n            )}\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Trust Indicators Summary\nexport function TrustIndicatorsSummary() {\n  const certifications = ['SSL Encrypted', 'GDPR Compliant', 'SOC 2 Certified'];\n  \n  const socialStats = [\n    {\n      label: 'Happy Customers',\n      value: '10000+',\n      icon: UsersIcon,\n      color: 'bg-blue-500',\n      description: 'Successful home purchases'\n    },\n    {\n      label: 'Success Rate',\n      value: '98%',\n      icon: TrophyIcon,\n      color: 'bg-green-500',\n      description: 'Customer satisfaction'\n    },\n    {\n      label: 'Years Experience',\n      value: '5+',\n      icon: ClockIcon,\n      color: 'bg-purple-500',\n      description: 'In real estate tech'\n    },\n    {\n      label: 'Expert Team',\n      value: '50+',\n      icon: AcademicCapIcon,\n      color: 'bg-orange-500',\n      description: 'Real estate professionals'\n    },\n  ];\n\n  const testimonials = [\n    {\n      name: 'Sarah Johnson',\n      role: 'First-time Home Buyer',\n      quote: 'BuyRight made my home buying journey so much easier. The step-by-step guidance was invaluable.',\n      rating: 5,\n      verified: true,\n    },\n    {\n      name: 'Mike Chen',\n      role: 'Real Estate Investor',\n      quote: 'The most comprehensive home buying platform I\\'ve used. Highly recommend for anyone serious about buying.',\n      rating: 5,\n      verified: true,\n    },\n  ];\n\n  return (\n    <div className=\"space-y-12\">\n      {/* Security & Certifications */}\n      <div className=\"text-center\">\n        <SecurityBadge certifications={certifications} className=\"mx-auto\" />\n      </div>\n\n      {/* Trust Score */}\n      <div className=\"text-center\">\n        <TrustScore score={4.9} reviews={2847} />\n      </div>\n\n      {/* Social Proof */}\n      <SocialProof stats={socialStats} />\n\n      {/* Testimonials */}\n      <TestimonialCarousel testimonials={testimonials} />\n\n      {/* Guarantee */}\n      <div className=\"text-center\">\n        <GuaranteeBadge \n          guaranteeText=\"Money Back Guarantee\"\n          period=\"30 Days\"\n        />\n      </div>\n    </div>\n  );\n}"